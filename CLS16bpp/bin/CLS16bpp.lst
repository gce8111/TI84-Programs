    1 00:0000 -  -  -  -  #include "includes\ti84pce.inc"
Listing for file "C:\Users\gce81\Documents\gitProjects\TI84-Programs\CLS16bpp\includes\ti84pce.inc"
    1 00:0000 -  -  -  -  ;TI-84 Plus CE Include File
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  ;Various Parts Contributed by
    4 00:0000 -  -  -  -  ;- BrandonW
    5 00:0000 -  -  -  -  ;- calc84
    6 00:0000 -  -  -  -  ;- Kerm Martian
    7 00:0000 -  -  -  -  ;- MateoConLechuga
    8 00:0000 -  -  -  -  ;- Runer112
    9 00:0000 -  -  -  -  ;- tr1p1ea
   10 00:0000 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "CLS16bpp.asm"
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  .assume ADL=1
    4 00:0000 -  -  -  -  .org userMem-2
    5 D1:A87F EF 7B -  -  .db tExtTok,tAsm84CeCmp
    6 D1:A881 -  -  -  -  
    7 D1:A881 CD 8C 0D 02  call _GetKey
    8 D1:A885 -  -  -  -   
    9 D1:A885 CD 92 A8 D1  call CLS 
   10 D1:A889 -  -  -  -  
   11 D1:A889 CD 8C 0D 02  call _GetKey
   12 D1:A88D -  -  -  -   
   13 D1:A88D CD E8 07 02  call _WHomeUp
   14 D1:A891 -  -  -  -   
   15 D1:A891 C9 -  -  -   ret
   16 D1:A892 -  -  -  -   
   17 D1:A892 -  -  -  -  CLS:
   18 D1:A892 21 00 00 D4  ld hl,vRam
   19 D1:A896 11 FF FF 00  ld de,%1111111111111111 	;fill screen color (white)
   20 D1:A89A 01 00 96 00  ld bc,320*240/2			;halve total number of pixels so we can use 16 bit loop
   21 D1:A89E -  -  -  -   
   22 D1:A89E -  -  -  -  CLSLoop:
   23 D1:A89E ED 1F -  -   ld (hl),de					;set first pixel to fill color
   24 D1:A8A0 23 -  -  -   inc hl						;go 2 pixels forward since we're in 16bpp mode
   25 D1:A8A1 23 -  -  -   inc hl
   26 D1:A8A2 -  -  -  -   
   27 D1:A8A2 ED 1F -  -   ld (hl),de					;do 2 pixels per loop, again so we can use 16 bit loop
   28 D1:A8A4 23 -  -  -   inc hl
   29 D1:A8A5 23 -  -  -   inc hl
   30 D1:A8A6 -  -  -  -   
   31 D1:A8A6 0B -  -  -   dec bc						;using bc to countdown how many iterations we have left
   32 D1:A8A7 78 -  -  -   ld a,b						;check if zero left
   33 D1:A8A8 B1 -  -  -   or c
   34 D1:A8A9 C2 9E A8 D1  jp nz,CLSLoop				;repeat if non-zero amount left
   35 D1:A8AD C9 -  -  -   ret						;otherwise return
   36 D1:A8AE -  -  -  -   
